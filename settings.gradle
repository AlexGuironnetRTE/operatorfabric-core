rootProject.name = 'operator-fabric'

include 'tools:swagger-spring-generators'
include 'tools:generic:utilities'
include 'tools:spring:spring-utilities'
include 'tools:spring:spring-mongo-utilities'
include 'tools:spring:spring-oauth2-utilities'
include 'tools:spring:spring-test-utilities'
include 'tools:generic:test-utilities'
include 'client:businessconfig'
include 'client:cards'
include 'client:users'
include 'services:core:businessconfig'
include 'services:core:cards-publication'
include 'services:core:cards-consultation'
include 'services:core:users'
include 'web-ui'
include 'ui:main'

project(':client:businessconfig').name = 'businessconfig-client-data'
project(':client:cards').name = 'cards-client-data'
project(':client:users').name = 'users-client-data'
project(':services:core:businessconfig').name = 'businessconfig-business-service'
project(':services:core:users').name = 'users-business-service'
project(':services:core:cards-publication').name = 'cards-publication-business-service'
project(':services:core:cards-consultation').name = 'cards-consultation-business-service'
project(':web-ui').name = 'web-ui'
project(':ui:main').name = 'main-user-interface'

//we check if the modules have gradle configuration files
rootProject.children.each { project ->
    project.buildFileName = "${project.name}.gradle"
    assert project.projectDir.isDirectory()
    assert project.buildFile.exists()
    assert project.buildFile.isFile()
}
